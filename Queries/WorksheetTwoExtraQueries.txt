--Provide a list of customer names, along with the total dollar amount each customer has spent.
SELECT CUSTOMER.First_Name, CUSTOMER.Last_Name, SUM(PRODUCT.Price) As Dollar_Amount_Spent
FROM MAKES_PURCHASE, PRODUCT_PURCHASE, PRODUCT, CUSTOMER
WHERE MAKES_PURCHASE.Purchase_ID= PRODUCT_PURCHASE.Purchase_ID AND PRODUCT_PURCHASE.Product_Number= PRODUCT.Product_Number AND CUSTOMER.Loyalty_No= MAKES_PURCHASE.Loyalty_No
GROUP BY CUSTOMER.Loyalty_No
ORDER BY SUM(PRODUCT.Price) DESC;


--Provide a list of customer names and e-mail addresses for customers who have spent more than the average customer.
SELECT CUSTOMER.First_Name, CUSTOMER.Last_Name, CUSTOMER.Email_Address
FROM CUSTOMER, MAKES_PURCHASE, PRODUCT_PURCHASE, PRODUCT
WHERE CUSTOMER.Loyalty_No= MAKES_PURCHASE.Loyalty_No AND MAKES_PURCHASE.Purchase_ID= PRODUCT_PURCHASE.Purchase_ID AND PRODUCT_PURCHASE.Product_Number= PRODUCT.Product_Number
GROUP BY CUSTOMER.Loyalty_No
HAVING SUM(PRODUCT.PRICE) >
	(SELECT AVG(CustomerTotalPurchase)
    FROM (
        SELECT SUM(PRODUCT.Price) AS CustomerTotalPurchase
        FROM CUSTOMER, MAKES_PURCHASE, PRODUCT_PURCHASE, PRODUCT
		WHERE CUSTOMER.Loyalty_No= MAKES_PURCHASE.Loyalty_No AND MAKES_PURCHASE.Purchase_ID= PRODUCT_PURCHASE.Purchase_ID AND PRODUCT_PURCHASE.Product_Number= PRODUCT.Product_Number
        GROUP BY CUSTOMER.Loyalty_No
		)
    ) ;

--Provide a list of the titles in the database and associated dollar totals for copies sold to customers, sorted from the title that has sold the highest dollar amount to the title that has sold the smallest.
SELECT BOOK.Book_Title, PRODUCT.Price * PRODUCT_PURCHASE.Quantity AS Total_Money_Sold
FROM BOOK, PRODUCT_PURCHASE, PRODUCT
WHERE BOOK.Product_Number= PRODUCT_PURCHASE.Product_Number AND PRODUCT.Product_Number= PRODUCT_PURCHASE.Product_Number
GROUP BY BOOK.ISBN
ORDER BY PRODUCT.Price * PRODUCT_PURCHASE.Quantity DESC;

--Find the most popular author in the database (i.e. the one who has sold the most books) 
SELECT AUTHOR.First_Name, AUTHOR.Middle_Name, AUTHOR.Last_Name, SUM(PRODUCT_PURCHASE.QUANTITY) AS Total_Books_Sold
FROM PRODUCT_PURCHASE, BOOK  , WRITTEN_BY, AUTHOR 
WHERE PRODUCT_PURCHASE.Product_Number= BOOK.Product_Number AND BOOK.ISBN=WRITTEN_BY.ISBN AND AUTHOR.Author_ID= WRITTEN_BY.Author_ID
GROUP BY AUTHOR.Author_ID
ORDER BY SUM(PRODUCT_PURCHASE.QUANTITY) DESC
LIMIT 1;

--Find the most profitable author in the database for this store (i.e. the one who has brought in the most money)
SELECT  AUTHOR.First_Name, AUTHOR.Middle_Name, AUTHOR.Last_Name, SUM(PRODUCT.Price * PRODUCT_PURCHASE.Quantity) AS Total_Revenue
FROM AUTHOR, WRITTEN_BY, BOOK, PRODUCT_PURCHASE, PRODUCT
WHERE AUTHOR.Author_ID= WRITTEN_BY.Author_ID AND BOOK.Product_Number= PRODUCT.Product_Number AND PRODUCT_PURCHASE.Product_Number= PRODUCT.Product_Number
GROUP BY AUTHOR.Author_ID
ORDER BY Total_Revenue DESC
LIMIT 1;

--Provide a list of customer information for customers who purchased anything written by the most profitable author in the database.
SELECT CUSTOMER.First_Name, CUSTOMER.Last_Name, CUSTOMER.Loyalty_No
FROM MAKES_PURCHASE, CUSTOMER
WHERE MAKES_PURCHASE.Loyalty_No= CUSTOMER.Loyalty_No AND MAKES_PURCHASE.Purchase_ID IN
			(
				SELECT  PRODUCT_PURCHASE.Purchase_ID
				FROM AUTHOR, WRITTEN_BY, BOOK, PRODUCT_PURCHASE, PRODUCT
				WHERE AUTHOR.Author_ID= WRITTEN_BY.Author_ID AND BOOK.Product_Number= PRODUCT.Product_Number AND PRODUCT_PURCHASE.Product_Number= PRODUCT.Product_Number
				GROUP BY AUTHOR.Author_ID
				ORDER BY SUM(PRODUCT.Price * PRODUCT_PURCHASE.Quantity)
				LIMIT 1);

--Provide the list of authors who wrote the books purchased by the customers who have spent more than the average customer.
SELECT DISTINCT A.First_Name, A.Middle_Name, A.Last_Name
FROM AUTHOR A, WRITTEN_BY WB, BOOK B, PRODUCT P, PURCHASE PU, MAKES_PURCHASE MP, PRODUCT_PURCHASE PP
WHERE A.Author_ID = WB.Author_ID AND WB.ISBN = B.ISBN AND B.Product_Number = P.Product_Number AND P.Product_Number = PP.Product_Number AND PU.Purchase_ID = MP.Purchase_ID AND PP.Purchase_ID= MP.Purchase_ID AND MP.Loyalty_No IN
 (
    SELECT MP1.Loyalty_No
    FROM MAKES_PURCHASE MP1, PRODUCT P1, PRODUCT_PURCHASE PP1
	WHERE MP1.Purchase_ID= PP1.Purchase_ID AND P1.Product_Number= PP1.Product_Number
    GROUP BY MP1. Loyalty_No
    HAVING SUM(PP1. Quantity * P1.Price) > 
	(
        SELECT AVG(Total_Spending)
        FROM 
		(SELECT MAKES_PURCHASE.Loyalty_No, SUM(PRODUCT_PURCHASE.Quantity * PRODUCT.Price) AS Total_Spending
            FROM MAKES_PURCHASE, PRODUCT_PURCHASE, PRODUCT
			WHERE MAKES_PURCHASE.Purchase_ID= PRODUCT_PURCHASE.Purchase_ID AND PRODUCT_PURCHASE.Product_Number= PRODUCT.Product_Number
            GROUP BY MAKES_PURCHASE.Loyalty_No
		)
    )
);

